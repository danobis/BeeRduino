# Variablen-Definitionen
@owner_uuid = 3a0087c4-a487-4800-ab12-cbbef81c0a23
@beehive_uuid = 6c5a5066-07a8-4a21-8dc2-766cbc63f0eb
@location_uuid = 52743bfb-e9a6-4470-afb7-a8b161f3980b

### Create Owner (Failure - missing email)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateOwner($input: OwnerInputJson!) { create_owner(input_json: $input) { uuid email phone_number description timestamp } }",
  "variables": {
    "input": {
      "email": "",
      "phone_number": "+43123456789",
      "description": "Erfahrener Imker aus Oberösterreich"
    }
  }
}

### Create Owner (Failure - missing phone_number)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateOwner($input: OwnerInputJson!) { create_owner(input_json: $input) { uuid email phone_number description timestamp } }",
  "variables": {
    "input": {
      "email": "beekeeper@example.com",
      "phone_number": "",
      "description": "Erfahrener Imker aus Oberösterreich"
    }
  }
}

### Create Owner (Failure - invalid email format)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateOwner($input: OwnerInputJson!) { create_owner(input_json: $input) { uuid email phone_number description timestamp } }",
  "variables": {
    "input": {
      "email": "not-an-email",
      "phone_number": "+43123456789",
      "description": "Erfahrener Imker aus Oberösterreich"
    }
  }
}

### Create Owner (Success)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateOwner($input: OwnerInputJson!) { create_owner(input_json: $input) { uuid email phone_number description timestamp } }",
  "variables": {
    "input": {
      "email": "beekeeper@example.com",
      "phone_number": "+43123456789",
      "description": "Erfahrener Imker aus Oberösterreich"
    }
  }
}

### Create Beehive (Failure - missing owner_uuid)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateBeehive($input: BeehiveInputJson!) { create_beehive(input_json: $input) { uuid owner_uuid location { uuid latitude longitude comment timestamp } comment timestamp } }",
  "variables": {
    "input": {
      "comment": "Neue Beute",
      "location": {
        "latitude": 48.2082,
        "longitude": 16.3738,
        "comment": "Stadtpark Wien"
      }
    }
  }
}

### Create Beehive (Failure - missing location AND missing location_uuid)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateBeehive($input: BeehiveInputJson!) { create_beehive(input_json: $input) { uuid owner_uuid location { uuid latitude longitude comment timestamp } comment timestamp } }",
  "variables": {
    "input": {
      "owner_uuid": "{{owner_uuid}}"
    }
  }
}

### Create Beehive (Failure - invalid latitude type)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateBeehive($input: BeehiveInputJson!) { create_beehive(input_json: $input) { uuid owner_uuid location { uuid latitude longitude comment timestamp } comment timestamp } }",
  "variables": {
    "input": {
      "owner_uuid": "{{owner_uuid}}",
      "location": {
        "latitude": "not-a-float",
        "longitude": 16.3738,
        "comment": "Ungültige Latitude"
      },
      "comment": "Test mit falschem Latitude-Typ"
    }
  }
}

### Create Beehive (Success - inline Location)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateBeehive($input: BeehiveInputJson!) { create_beehive(input_json: $input) { uuid owner_uuid location { uuid latitude longitude comment timestamp } comment timestamp } }",
  "variables": {
    "input": {
      "owner_uuid": "{{owner_uuid}}",
      "location": {
        "latitude": 48.2082,
        "longitude": 16.3738,
        "comment": "Stadtpark Wien"
      },
      "comment": "Beute im Stadtpark"
    }
  }
}

### Create Beehive (Success - mit vorhandener location_uuid)
# (Hier wird angenommen, dass location_uuid existiert. Andernfalls vorher Location anlegen.)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "mutation CreateBeehive($input: BeehiveInputJson!) { create_beehive(input_json: $input) { uuid owner_uuid location { uuid latitude longitude comment timestamp } comment timestamp } }",
  "variables": {
    "input": {
      "owner_uuid": "{{owner_uuid}}",
      "location_uuid": "{{location_uuid}}",
      "comment": "Beute mit bestehender Location"
    }
  }
}

### Query get_owner (Failure - missing include_beehives)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "query GetOwner($owner_uuid: String) { get_owner(owner_uuid: $owner_uuid) { uuid email phone_number description beehives { uuid comment timestamp } timestamp } }",
  "variables": {
    "owner_uuid": "{{owner_uuid}}"
  }
}

### Query get_owner (Failure - include_beehives wrong type)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "query GetOwner($include: Boolean!, $owner_uuid: String) { get_owner(include_beehives: $include, owner_uuid: $owner_uuid) { uuid email phone_number description beehives { uuid comment timestamp } timestamp } }",
  "variables": {
    "include": "yes",
    "owner_uuid": "{{owner_uuid}}"
  }
}

### Query get_owner (Success - include_beehives = true)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "query GetOwner($include: Boolean!, $owner_uuid: String) { get_owner(include_beehives: $include, owner_uuid: $owner_uuid) { uuid email phone_number description beehives { uuid comment timestamp location { uuid latitude longitude } } timestamp } }",
  "variables": {
    "include": true,
    "owner_uuid": "{{owner_uuid}}"
  }
}

### Query get_owner (Success - include_beehives = false)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "query GetOwner($include: Boolean!, $owner_uuid: String) { get_owner(include_beehives: $include, owner_uuid: $owner_uuid) { uuid email phone_number description timestamp } }",
  "variables": {
    "include": false,
    "owner_uuid": "{{owner_uuid}}"
  }
}

### Query get_beehive (Failure - missing beehive_uuid AND missing owner_uuid)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "query GetBeehive($beehive_uuid: String, $owner_uuid: String) { get_beehive(beehive_uuid: $beehive_uuid, owner_uuid: $owner_uuid) { uuid owner_uuid comment timestamp location { uuid latitude longitude comment } } }",
  "variables": {
  }
}

### Query get_beehive (Success - nach UUID)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "query GetBeehive($beehive_uuid: String) { get_beehive(beehive_uuid: $beehive_uuid) { uuid owner_uuid comment timestamp location { uuid latitude longitude comment } } }",
  "variables": {
    "beehive_uuid": "{{beehive_uuid}}"
  }
}

### Query get_beehives (Failure - missing owner_uuid or invalid UUID-Format)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "query GetBeehives($owner_uuid: String) { get_beehives(owner_uuid: $owner_uuid) { uuid comment timestamp owner_uuid location { uuid latitude longitude comment } } }",
  "variables": {
    "owner_uuid": ""
  }
}

### Query get_beehives (Success)
POST http://localhost:8080/gateway/graphql/core
Content-Type: application/json

{
  "query": "query GetBeehives($owner_uuid: String) { get_beehives(owner_uuid: $owner_uuid) { uuid comment timestamp owner_uuid location { uuid latitude longitude comment } } }",
  "variables": {
    "owner_uuid": "{{owner_uuid}}"
  }
}

### Query get_measurements (Failure - invalid enum value für history_span)
POST http://localhost:8080/gateway/graphql/analysis
Content-Type: application/json

{
  "query": "query GetMeasurements($beehive_uuid: String, $history_span: HistorySpan) { get_measurements(beehive_uuid: $beehive_uuid, history_span: $history_span) { uuid beehive_uuid owner_uuid type unit value timestamp } }",
  "variables": {
    "beehive_uuid": "{{beehive_uuid}}",
    "history_span": "LAST_10_DAYS"
  }
}

### Query get_measurements (Failure - invalid enum value für sensor_type)
POST http://localhost:8080/gateway/graphql/analysis
Content-Type: application/json

{
  "query": "query GetMeasurements($beehive_uuid: String, $sensor_type: SensorType) { get_measurements(beehive_uuid: $beehive_uuid, sensor_type: $sensor_type) { uuid beehive_uuid owner_uuid type unit value timestamp } }",
  "variables": {
    "beehive_uuid": "{{beehive_uuid}}",
    "sensor_type": "PRESSURE"
  }
}

### Query get_measurements (Success - DEFAULT)
POST http://localhost:8080/gateway/graphql/analysis
Content-Type: application/json

{
  "query": "query GetMeasurements($beehive_uuid: String) { get_measurements(beehive_uuid: $beehive_uuid) { uuid beehive_uuid owner_uuid type unit value timestamp } }",
  "variables": {
    "beehive_uuid": "{{beehive_uuid}}"
  }
}

### Query get_measurements (Success - mit HistorySpan LAST_5DAYS und SensorType TEMPERATURE_INSIDE)
POST http://localhost:8080/gateway/graphql/analysis
Content-Type: application/json

{
  "query": "query GetMeasurements($beehive_uuid: String, $history_span: HistorySpan, $sensor_type: SensorType) { get_measurements(beehive_uuid: $beehive_uuid, history_span: $history_span, sensor_type: $sensor_type) { uuid beehive_uuid owner_uuid type unit value timestamp } }",
  "variables": {
    "beehive_uuid": "{{beehive_uuid}}",
    "history_span": "LAST_5DAYS",
    "sensor_type": "TEMPERATURE_INSIDE"
  }
}

### Hinweis zu Subscriptions:
# HTTP-Client in JetBrains unterstützt WebSocket-Requests nicht direkt in .http-Dateien.
# Für Subscriptions (z.B. on_measurement) müsste man in der Regel ein separates Tool/WebSocket-Client nutzen.

### Create Measurement (Success)
POST http://localhost:8080/gateway/collector
Content-Type: application/json

{
  "timestamp": "2025-06-23T00:00:00.000",
  "beehive_uuid": "{{beehive_uuid}}",
  "value": 25.3,
  "type": "temperature_inside",
  "unit": "celsius"
}

### Create Measurements (Success)
POST http://localhost:8080/gateway/collector
Content-Type: application/json

[
  {
  "timestamp": "2025-06-23T00:00:00.000",
  "beehive_uuid": "{{beehive_uuid}}",
  "value": 25.3,
  "type": "temperature_inside",
  "unit": "celsius"
  },
  {
  "timestamp": "2025-06-23T01:00:00.000",
  "beehive_uuid": "{{beehive_uuid}}",
  "value": 25.3,
  "type": "temperature_inside",
  "unit": "celsius"
  }
]