services:
  mariadb1:
    image: mariadb:11.8
    container_name: mariadb1
    restart: unless-stopped
    ports:
      - '3306:3306'
    environment:
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=${MARIADB1_ALLOW_EMPTY_ROOT_PASSWORD:-false}
      - MARIADB_DATABASE=${MARIADB1_DATABASE:-master_schema}
      - MARIADB_USER=${MARIADB1_USER:-mariadb}
      - MARIADB_PASSWORD=${MARIADB1_PASSWORD:-Passme1234!}
      - MARIADB_ROOT_PASSWORD=${MARIADB1_ROOT_PASSWORD:-Passme1234!}
    volumes:
      - mariadb1-storage:/var/lib/mysql
      - ./mariadb1/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - shared-network
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  mariadb2:
    image: mariadb:11.8
    container_name: mariadb2
    restart: unless-stopped
    ports:
      - '3307:3306'
    environment:
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=${MARIADB2_ALLOW_EMPTY_ROOT_PASSWORD:-false}
      - MARIADB_DATABASE=${MARIADB2_DATABASE:-data_schema}
      - MARIADB_USER=${MARIADB2_USER:-mariadb}
      - MARIADB_PASSWORD=${MARIADB2_PASSWORD:-Passme1234!}
      - MARIADB_ROOT_PASSWORD=${MARIADB2_ROOT_PASSWORD:-Passme1234!}
    volumes:
      - mariadb2-storage:/var/lib/mysql
      - ./mariadb2/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - shared-network
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:v3.4.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - prometheus-storage:/prometheus
      - ./prometheus/config-dev.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - shared-network

  grafana:
    image: grafana/grafana:9.1.7
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - GF_USERS_ALLOW_SIGN_UP=${GRAFANA_ALLOW_SIGN_UP:-false}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-grafana}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-Passme1234!}
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - shared-network
    depends_on:
      - prometheus

  consul:
    image: consul:1.7
    container_name: consul
    command: agent -dev -ui -client=0.0.0.0 -bind=0.0.0.0 --https-port=8501
    ports:
      - "8500:8500"
      - "8501:8501"
    restart: unless-stopped
    networks:
      - shared-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME:-rabbitmq}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-Passme1234!}
    volumes:
      - rabbitmq-storage:/var/lib/rabbitmq
    networks:
      - shared-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  mariadb1-storage:
  mariadb2-storage:
  prometheus-storage:
  grafana-storage:
  rabbitmq-storage:

networks:
  shared-network:
    driver: bridge